#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const execa = require('execa')
const path = require('path')

const BuildProgress = require('../lib/buildProgress')
const runWebpack = require('../lib/runWebpack')

/**
 * Usage.
 */
program.usage('publish')
  .option('-d, --disable-uglify', 'disable uglify the code')

/**
 * Help
 */
program.on('--help', function () {
  console.log()
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # build the code and then publish to the npmjs.org'))
  console.log(chalk.green('    $ timo publish'))
  console.log()
})

program.parse(process.argv)

const disableUglify = program.disableUglify || false

let i = 1

// 1. 切换至master分支
console.log()
console.log(`  ${i++}. Checkout master`)
execa.shellSync('git checkout master')

// 2. 拉取master最新的代码
console.log()
console.log(`  ${i++}. Pull the newest code`)
execa.shellSync('git pull')

// 3. 删除dist
console.log()
console.log(`  ${i++}. Delete ./dist`)
execa.shellSync('rm -rf ./dist')

// 获取项目路径
const absolutePath = execa.shellSync('pwd').stdout

const afterWork = () => {
  // 6. 更新package version
  console.log()
  console.log(`  ${i++}. Npm version patch`)
  execa.shellSync('npm version patch')

  // 7. 推到master分支
  console.log()
  console.log(`  ${i++}. git push`)
  execa.shellSync('git push')

  // 8. 推到master分支
  console.log()
  console.log(`  ${i++}. Publish package`)
  execa.shellSync('npm publish')
}

const runBuild = async () => {
  // 3. 打包代码
  console.log()
  console.log(`  ${i++}. Build Code`)
  // webpack config
  // 生成环境配置
  const prodConfigPath = path.join(absolutePath, 'webpack.config.js')
  const prodConfig = require(prodConfigPath)
  prodConfig.plugins.push(new BuildProgress())
  await runWebpack(prodConfig)
  console.log(`  ${chalk.bgGreen.black(' SUCCESS ')} Production Compiled successfully.\n`)

  if (!disableUglify) {
    // 4. 打包压缩代码
    console.log()
    console.log(`  ${i++}. Build Uglify Code`)
    // 压缩config
    const ugConfigPath = path.join(absolutePath, 'webpack.config.min.js')
    const ugConfig = require(ugConfigPath)
    ugConfig.plugins.push(new BuildProgress())
    await runWebpack(ugConfig)
    console.log(`  ${chalk.bgGreen.black(' SUCCESS ')} Uglify Compiled successfully.\n`)
  }

  afterWork()
}

runBuild()
